(define tolerance 0.00001)
(define (fixed-point-with-print f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2))
    tolerance))
  (define (try guess steps)
    (let ((next (f guess)))
      (newline)
      (display "steps: ") (display steps)
      (display " guess: ") (display guess)
      (display ", ")
      (display "next ") (display next)
      (if (close-enough? guess next)
          next
          (try next (+ 1 steps)))))
  (newline) (display "Begin guess: ") (display f) 
  (try first-guess 1)
  (newline))
(define (average x y)
  (/ (+ x y) 2))
; (fixed-point-with-print cos 1.0)
; (fixed-point-with-print (lambda (x) (+ 1 (/ 1 x))) 1.0)
(fixed-point-with-print (lambda (x) (/ (log 1000) (log x))) 2.0)
(fixed-point-with-print (lambda (x) (average (/ (log 1000) (log x)) x)) 2.0)